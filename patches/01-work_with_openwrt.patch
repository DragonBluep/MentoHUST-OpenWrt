--- a/src/myconfig.c
+++ b/src/myconfig.c
@@ -208,10 +208,10 @@ void initConfig(int argc, char **argv)
 	int exitFlag = 0;	/* 0Nothing 1退出 2重启 */
 	int daemonMode = D_DAEMONMODE;	/* 是否后台运行 */
 
-	printf(_("\n欢迎使用MentoHUST\t版本: %s\n"
-			"Copyright (C) 2009-2010 HustMoon Studio\n"
-			"人到华中大，有甜亦有辣。明德厚学地，求是创新家。\n"
-			"Bug report to %s\n\n"), VERSION, PACKAGE_BUGREPORT);
+	// printf(_("\n欢迎使用MentoHUST\t版本: %s\n"
+	// 		"Copyright (C) 2009-2010 HustMoon Studio\n"
+	// 		"人到华中大，有甜亦有辣。明德厚学地，求是创新家。\n"
+	// 		"Bug report to %s\n\n"), VERSION, PACKAGE_BUGREPORT);
 	saveFlag = (readFile(&daemonMode)==0 ? 0 : 1);
 	readArg(argc, argv, &saveFlag, &exitFlag, &daemonMode);
 #ifndef NO_DYLOAD
@@ -439,13 +439,13 @@ static void showHelp(const char *fileNam
 		"\t-l 允许失败次数[0表示无限制，默认8]\n"
 		"\t-a 组播地址: 0(标准) 1(锐捷) 2(赛尔) [默认0]\n"
 		"\t-d DHCP方式: 0(不使用) 1(二次认证) 2(认证后) 3(认证前) [默认0]\n"
-		"\t-b 是否后台运行: 0(否) 1(是，关闭输出) 2(是，保留输出) 3(是，输出到文件) [默认0]\n"
+		"\t-b 是否后台运行: 0(否) 1(是，关闭输出) 2(是，保留输出) 3(是，输出到文件) [默认0 OpenWrt procd 下必须为0]\n"
 #ifndef NO_NOTIFY
 		"\t-y 是否显示通知: 0(否) 1~20(是) [默认5]\n"
 #endif
 		"\t-v 客户端版本号[默认0.00表示兼容xrgsu]\n"
 		"\t-f 自定义数据文件[默认不使用]\n"
-		"\t-c DHCP脚本[默认dhclient]\n"
+		"\t-c DHCP脚本[默认dhclient OpenWrt 下不需要配置此项]\n"
 		"\t-q 显示SuConfig.dat的内容(如-q/path/SuConfig.dat)\n"
 		"\t-S 接入服务选择：0（默认） 1（有线1x上网服务，例如华农拨办公账号时需要）\n"
 		"例如:\t%s -uusername -ppassword -neth0 -i192.168.0.1 -m255.255.255.0 -g0.0.0.0 -s0.0.0.0 -o0.0.0.0 -t8 -e30 -r15 -a0 -d1 -b0 -v4.10 -fdefault.mpf -cdhclient\n"
@@ -503,28 +503,28 @@ static void printConfig()
 	char *dhcp[] = {_("不使用"), _("二次认证"), _("认证后"), _("认证前")};
 	printf(_("** 用户名:\t%s\n"), userName);
 	/* printf("** 密码:\t%s\n", password); */
-	printf(_("** 网卡: \t%s\n"), nic);
-	if (gateway)
-		printf(_("** 网关地址:\t%s\n"), formatIP(gateway));
-	if (dns)
-		printf(_("** DNS地址:\t%s\n"), formatIP(dns));
-	if (pingHost)
-		printf(_("** 智能重连:\t%s\n"), formatIP(pingHost));
-	printf(_("** 认证超时:\t%u秒\n"), timeout);
-	printf(_("** 心跳间隔:\t%u秒\n"), echoInterval);
-	printf(_("** 失败等待:\t%u秒\n"), restartWait);
-	if (maxFail)
-		printf(_("** 允许失败:\t%u次\n"), maxFail);
-	printf(_("** 组播地址:\t%s\n"), addr[startMode]);
-	printf(_("** DHCP方式:\t%s\n"), dhcp[dhcpMode]);
-#ifndef NO_NOTIFY
-	if (showNotify)
-		printf(_("** 通知超时:\t%d秒\n"), showNotify);
-#endif
+// 	printf(_("** 网卡: \t%s\n"), nic);
+// 	if (gateway)
+// 		printf(_("** 网关地址:\t%s\n"), formatIP(gateway));
+// 	if (dns)
+// 		printf(_("** DNS地址:\t%s\n"), formatIP(dns));
+// 	if (pingHost)
+// 		printf(_("** 智能重连:\t%s\n"), formatIP(pingHost));
+// 	printf(_("** 认证超时:\t%u秒\n"), timeout);
+// 	printf(_("** 心跳间隔:\t%u秒\n"), echoInterval);
+// 	printf(_("** 失败等待:\t%u秒\n"), restartWait);
+// 	if (maxFail)
+// 		printf(_("** 允许失败:\t%u次\n"), maxFail);
+// 	printf(_("** 组播地址:\t%s\n"), addr[startMode]);
+// 	printf(_("** DHCP方式:\t%s\n"), dhcp[dhcpMode]);
+// #ifndef NO_NOTIFY
+// 	if (showNotify)
+// 		printf(_("** 通知超时:\t%d秒\n"), showNotify);
+// #endif
 	if (bufType >= 2)
 		printf(_("** 数据文件:\t%s\n"), dataFile);
-	if (dhcpMode != 0)
-		printf(_("** DHCP脚本:\t%s\n"), dhcpScript);
+// 	if (dhcpMode != 0)
+// 		printf(_("** DHCP脚本:\t%s\n"), dhcpScript);
 }
 
 static int openPcap()
--- a/src/myfunc.c
+++ b/src/myfunc.c
@@ -483,15 +483,15 @@ static int Check(const u_char *md5Seed)
 {
 	char final_str[129];
 	int value;
-	printf(_("** 客户端版本:\t%d.%d\n"), fillBuf[0x3B], fillBuf[0x3C]);
-	printf(_("** MD5种子:\t%s\n"), formatHex(md5Seed, 16));
+	// printf(_("** 客户端版本:\t%d.%d\n"), fillBuf[0x3B], fillBuf[0x3C]);
+	// printf(_("** MD5种子:\t%s\n"), formatHex(md5Seed, 16));
 	value = check_init(dataFile);
 	if (value == -1) {
 		printf(_("!! 缺少8021x.exe信息，客户端校验无法继续！\n"));
 		return 1;
 	}
 	V2_check(md5Seed, final_str);
-	printf(_("** V2校验值:\t%s\n"), final_str);
+	// printf(_("** V2校验值:\t%s\n"), final_str);
 	setProperty(0x17, (u_char *)final_str, 32);
 	check_free();
 	return 0;
--- a/src/mystate.c
+++ b/src/mystate.c
@@ -133,9 +133,9 @@ int restart()
 static int renewIP()
 {
 	setTimer(0);	/* 取消定时器 */
-	printf(_(">> 正在获取IP...\n"));
-	system(dhcpScript);
-	printf(_(">> 操作结束。\n"));
+	// printf(_(">> 正在获取IP...\n"));
+	// system(dhcpScript);
+	// printf(_(">> 操作结束。\n"));
 	dhcpMode += 3; /* 标记为已获取，123变为456，5不需再认证*/
 	if (fillHeader() == -1)
 		exit(EXIT_FAILURE);
